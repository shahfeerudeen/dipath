import { type OptionsDefs, type Validator } from 'ag-charts-core';
import type { AgBaseAxisLabelOptions, AgBaseAxisOptions, AgBaseCartesianAxisLabelOptions, AgBaseCartesianAxisOptions, AgBaseCrossLineLabelOptions, AgBaseCrossLineOptions, AgBaseCrosshairLabel, AgCartesianAxisLabelOptions, AgCartesianCrossLineOptions, AgContinuousAxisOptions, AgCrosshairLabel, AgCrosshairOptions, AgTimeAxisParentLevel } from 'ag-charts-types';
export declare const timeIntervalUnit: Validator;
export declare const numberFormatValidator: Validator;
export declare const commonCrossLineLabelOptionsDefs: OptionsDefs<AgBaseCrossLineLabelOptions>;
export declare const commonCrossLineOptionsDefs: OptionsDefs<AgBaseCrossLineOptions<AgBaseCrossLineLabelOptions>>;
export declare const cartesianCrossLineOptionsDefs: OptionsDefs<AgCartesianCrossLineOptions>;
export declare const commonAxisLabelOptionsDefs: OptionsDefs<AgBaseAxisLabelOptions>;
export declare const cartesianAxisLabelOptionsDefs: OptionsDefs<AgBaseCartesianAxisLabelOptions>;
export declare const cartesianNumericAxisLabel: OptionsDefs<AgCartesianAxisLabelOptions>;
export declare const cartesianTimeAxisLabel: OptionsDefs<AgCartesianAxisLabelOptions>;
export declare const cartesianTimeAxisParentLevel: OptionsDefs<AgTimeAxisParentLevel>;
export declare const commonAxisOptionsDefs: OptionsDefs<Omit<AgBaseAxisOptions, 'type'>>;
export declare const cartesianAxisOptionsDefs: OptionsDefs<Omit<AgBaseCartesianAxisOptions<any>, 'type' | 'label' | 'primaryLabel' | 'crosshair'>>;
export declare function cartesianAxisCrosshairOptions<T extends boolean>(canFormat?: T): OptionsDefs<AgCrosshairOptions<T extends true ? AgCrosshairLabel : AgBaseCrosshairLabel>>;
export declare function continuousAxisOptions(validDatum: Validator, supportTimeInterval?: boolean): OptionsDefs<AgContinuousAxisOptions>;
